{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/Shared/autocomplete/auto-complete.directive.ts","webpack:///./src/app/Shared/autocomplete/auto-complete.module.ts","webpack:///./src/app/Shared/utils/directives/utils.directive.ts","webpack:///./src/app/Shared/utils/pipes/html-code.pipe.ts","webpack:///./src/app/Shared/utils/pipes/javascript-code.pipe.ts","webpack:///./src/app/Shared/utils/services/storage.ts","webpack:///./src/app/Shared/utils/utils.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/customer/customer.ts","webpack:///./src/app/product/product-routing.module.ts","webpack:///./src/app/product/product.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/customer/customeredit/customeredit.component.css","webpack:///./src/app/customer/customerlist.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customeredit/customeredit.component.html","webpack:///./src/app/customer/customerlist.component.html","webpack:///./src/app/product.service.ts","webpack:///./src/app/Shared/autocomplete/auto-complete.component.ts","webpack:///./src/app/Shared/autocomplete/auto-complete.ts","webpack:///./src/app/Shared/utils/services/memory-storage.ts","webpack:///./src/app/customer/customeredit/customeredit.component.ts","webpack:///./src/app/customer/customerlist.component.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 150;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 150\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {\n  Directive,\n  Input,\n  Output,\n  ComponentRef,\n  ViewContainerRef,\n  EventEmitter,\n  OnInit,\n  ComponentFactoryResolver,\n  Renderer,\n  SimpleChanges,\n  SkipSelf,\n  Host,\n  Optional\n} from \"@angular/core\";\nimport { NguiAutoCompleteComponent } from \"./auto-complete.component\";\nimport { ControlContainer, AbstractControl, FormGroup, FormControl, FormGroupName } from \"@angular/forms\";\n\n/**\n * display auto-complete section with input and dropdown list when it is clicked\n */\n@Directive({\n  selector: \"[auto-complete], [ngui-auto-complete]\"\n})\nexport class NguiAutoCompleteDirective implements OnInit {\n\n  @Input(\"auto-complete-placeholder\") autoCompletePlaceholder: string;\n  @Input(\"source\") source: any;\n  @Input(\"path-to-data\") pathToData: string;\n  @Input(\"min-chars\") minChars: number;\n  @Input(\"display-property-name\") displayPropertyName: string;\n  @Input(\"accept-user-input\") acceptUserInput: boolean;\n  @Input(\"max-num-list\") maxNumList: string;\n  @Input(\"select-value-of\") selectValueOf: string;\n\n  @Input(\"list-formatter\") listFormatter;\n  @Input(\"loading-text\") loadingText: string = \"Loading\";\n  @Input(\"blank-option-text\") blankOptionText: string;\n  @Input(\"no-match-found-text\") noMatchFoundText: string;\n  @Input(\"value-formatter\") valueFormatter: any;\n  @Input(\"tab-to-select\") tabToSelect: boolean = true;\n  @Input(\"match-formatted\") matchFormatted: boolean = false;\n\n  @Input() ngModel: String;\n  @Input('formControlName') formControlName: string;\n  //if [formControl] is used on the anchor where our directive is sitting\n  //a form is not necessary to use a formControl we should also support this\n  @Input('formControl') extFormControl: FormControl;\n\n  @Output() ngModelChange = new EventEmitter();\n  @Output() valueChanged = new EventEmitter();\n\n\n  componentRef: ComponentRef<NguiAutoCompleteComponent>;\n  wrapperEl: HTMLElement;\n  el: HTMLElement;   // this element element, can be any\n  acDropdownEl: HTMLElement; // auto complete element\n  inputEl: HTMLInputElement;  // input element of this element\n  formControl: AbstractControl;\n  revertValue: any;\n  \n  constructor(private resolver: ComponentFactoryResolver,\n              private renderer: Renderer,\n              public  viewContainerRef: ViewContainerRef,\n              @Optional() @Host() @SkipSelf() private parentForm: ControlContainer) {\n    this.el = this.viewContainerRef.element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // wrap this element with <div class=\"ngui-auto-complete\">\n    this.wrapperEl = document.createElement(\"div\");\n    this.wrapperEl.className = \"ngui-auto-complete-wrapper\";\n    this.wrapperEl.style.position = \"relative\";\n    this.el.parentElement.insertBefore(this.wrapperEl, this.el.nextSibling);\n    this.wrapperEl.appendChild(this.el);\n\n\n    //Check if we were supplied with a [formControlName] and it is inside a [form]\n    //else check if we are supplied with a [FormControl] regardless if it is inside a [form] tag\n    if (this.parentForm && this.formControlName) {\n      if (this.parentForm['form']) {\n        this.formControl = (<FormGroup>this.parentForm['form']).get(this.formControlName);\n      } else if (this.parentForm instanceof FormGroupName) {\n        this.formControl = (<FormGroupName>this.parentForm).control.controls[this.formControlName];\n      }\n    } else if (this.extFormControl) {\n      this.formControl = this.extFormControl;\n    }\n\n    // apply toString() method for the object\n    if (!!this.ngModel) {\n      this.selectNewValue(this.ngModel);\n    } else if (!!this.formControl && this.formControl.value) {\n      this.selectNewValue(this.formControl.value[this.displayPropertyName]);\n    }\n\n  }\n\n  ngAfterViewInit() {\n    // if this element is not an input tag, move dropdown after input tag\n    // so that it displays correctly\n    this.inputEl = this.el.tagName === \"INPUT\" ?\n        <HTMLInputElement>this.el : <HTMLInputElement>this.el.querySelector(\"input\");\n\n    this.inputEl.addEventListener('focus', e => this.showAutoCompleteDropdown(e));\n    this.inputEl.addEventListener('blur', e => this.hideAutoCompleteDropdown(e));\n    this.inputEl.addEventListener('keydown', e => this.keydownEventHandler(e));\n    this.inputEl.addEventListener('input', e => this.inputEventHandler(e));\n  }\n\n  ngOnDestroy(): void {\n    if (this.componentRef) {\n      this.componentRef.instance.valueSelected.unsubscribe();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['ngModel']) {\n      this.ngModel = this.setToStringFunction(changes['ngModel'].currentValue);\n    }\n  }\n\n  //show auto-complete list below the current element\n  showAutoCompleteDropdown = (event?: any): void => {\n    let factory = this.resolver.resolveComponentFactory(NguiAutoCompleteComponent);\n\n    this.componentRef = this.viewContainerRef.createComponent(factory);\n\n    let component = this.componentRef.instance;\n    component.showInputTag = false; //Do NOT display autocomplete input tag separately\n\n    component.pathToData = this.pathToData;\n    component.minChars = this.minChars;\n    component.source = this.source;\n    component.placeholder = this.autoCompletePlaceholder;\n    component.acceptUserInput = this.acceptUserInput;\n    component.maxNumList = parseInt(this.maxNumList, 10);\n\n    component.loadingText = this.loadingText;\n    component.listFormatter = this.listFormatter;\n    component.blankOptionText = this.blankOptionText;\n    component.noMatchFoundText = this.noMatchFoundText;\n    component.tabToSelect = this.tabToSelect;\n    component.matchFormatted = this.matchFormatted;\n\n    component.valueSelected.subscribe(this.selectNewValue);\n    this.acDropdownEl = this.componentRef.location.nativeElement;\n    this.acDropdownEl.style.display = \"none\";\n    // if this element is not an input tag, move dropdown after input tag\n    // so that it displays correctly\n    if (this.el.tagName !== \"INPUT\" && this.acDropdownEl) {\n      this.inputEl.parentElement.insertBefore(this.acDropdownEl, this.inputEl.nextSibling);\n    }\n    \n    this.revertValue = typeof this.ngModel !== \"undefined\" ? this.ngModel : this.inputEl.value;\n    setTimeout(() => {\n      component.reloadList(this.inputEl.value);\n      this.styleAutoCompleteDropdown();\n      component.dropdownVisible = true;\n    });\n  };\n\n  hideAutoCompleteDropdown = (event?: any): void => {\n    if (this.componentRef) {\n      let currentItem: any;\n      let hasRevertValue = (typeof this.revertValue !== \"undefined\");\n      if(this.inputEl && hasRevertValue && this.acceptUserInput === false) {\n        currentItem = this.componentRef.instance.findItemFromSelectValue(this.inputEl.value);\n      }\n      \n      this.componentRef.destroy();\n      this.componentRef = undefined;\n      if(\n        this.inputEl && \n        hasRevertValue && \n        this.acceptUserInput === false &&\n        currentItem === null\n      ) {\n        this.selectNewValue(this.revertValue);\n      }\n\n    }\n  };\n\n  styleAutoCompleteDropdown = () => {\n    if (this.componentRef) {\n      let component = this.componentRef.instance;\n\n      /* setting width/height auto complete */\n      let thisElBCR = this.el.getBoundingClientRect();\n      let thisInputElBCR = this.inputEl.getBoundingClientRect();\n      let closeToBottom = thisInputElBCR.bottom + 100 > window.innerHeight;\n\n      this.acDropdownEl.style.width = thisInputElBCR.width + \"px\";\n      this.acDropdownEl.style.position = \"absolute\";\n      this.acDropdownEl.style.zIndex = \"1\";\n      this.acDropdownEl.style.left = \"0\";\n      this.acDropdownEl.style.display = \"inline-block\";\n\n      if (closeToBottom) {\n        this.acDropdownEl.style.bottom = `${thisInputElBCR.height}px`;\n      } else {\n        this.acDropdownEl.style.top = `${thisInputElBCR.height}px`;\n      }\n    }\n  };\n\n  setToStringFunction(item: any): any {\n    if (item && typeof item === \"object\") {\n      let displayVal;\n      if (typeof this.valueFormatter === 'string') {\n        let matches = this.valueFormatter.match(/[a-zA-Z0-9_\\$]+/g);\n        let formatted = this.valueFormatter;\n        if (matches && typeof item !== 'string') {\n          matches.forEach(key => {\n            formatted = formatted.replace(key, item[key]);\n          });\n        }\n        displayVal = formatted;\n        } else if (typeof this.valueFormatter === 'function') {\n        displayVal = this.valueFormatter(item);\n        } else if (this.displayPropertyName) {\n        displayVal = item[this.displayPropertyName];\n        } else if (typeof this.listFormatter === 'string' && this.listFormatter.match(/^\\w+$/)) {\n        displayVal = item[this.listFormatter];\n        } else {\n        displayVal = item.value;\n        }\n        item.toString = function () {\n          return displayVal;\n        }\n    }\n    return item;\n  }\n\n  selectNewValue = (item: any) => {\n    // make displayable value\n    if (item && typeof item === \"object\") {\n      item = this.setToStringFunction(item);\n    }\n    this.inputEl && (this.inputEl.value = '' + item);\n\n    // make return value\n    let val = item;\n    if (this.selectValueOf && item[this.selectValueOf]) {\n      val = item[this.selectValueOf];\n    }\n    if ((this.parentForm && this.formControlName) || this.extFormControl) {\n      if (!!val) {\n        this.formControl.patchValue(val);\n      }\n    }\n    (val !== this.ngModel) && this.ngModelChange.emit(val);\n    this.valueChanged.emit(val);\n    this.hideAutoCompleteDropdown();\n  };\n\n  private keydownEventHandler = (evt: any) => {\n    if (this.componentRef) {\n      let component = <NguiAutoCompleteComponent>this.componentRef.instance;\n      component.inputElKeyHandler(evt);\n    }\n  };\n\n  private inputEventHandler = (evt: any) => {\n    if (this.componentRef) {\n      let component = <NguiAutoCompleteComponent>this.componentRef.instance;\n      component.dropdownVisible = true;\n      component.reloadListInDelay(evt);\n    } else {\n      this.showAutoCompleteDropdown()\n    }\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/autocomplete/auto-complete.directive.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NguiAutoCompleteComponent } from './auto-complete.component';\nimport { NguiAutoCompleteDirective } from './auto-complete.directive';\nimport { NguiAutoComplete } from './auto-complete';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [NguiAutoCompleteComponent, NguiAutoCompleteDirective],\n  exports:  [NguiAutoCompleteComponent, NguiAutoCompleteDirective],\n  entryComponents: [NguiAutoCompleteComponent]\n})\nexport class NguiAutoCompleteModule {\n  static forRoot() {\n    return {\n      ngModule: NguiAutoCompleteModule,\n      providers: [NguiAutoComplete]\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/autocomplete/auto-complete.module.ts","import {Directive} from \"@angular/core\";\n\n@Directive({\n  selector:\n    'ngui-utils-1, ngui-utils-2, ngui-utils-3, ngui-utils-4, ngui-utils-5,' +\n    'ngui-utils-6, ngui-utils-7, ngui-utils-8, ngui-utils-9, ngui-utils-10,' +\n    'ngui-utils-11, ngui-utils-12, ngui-utils-13, ngui-utils-14, ngui-utils-15,' +\n    'ngui-utils-16, ngui-utils-17, ngui-utils-18, ngui-utils-19, ngui-utils-20'\n})\nexport class NguiUtilsDirective {} // dummy directive to allow non-standard tags\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/utils/directives/utils.directive.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'htmlCode'})\nexport class HtmlCodePipe implements PipeTransform {\n  transform(html: string, tagsIncludeExclude?: string): string {\n    let ret: string;\n    let tagsInclude: string[] = [];\n    let tagsExclude: string[] = [];\n\n    (tagsIncludeExclude||'').split(',').forEach(function(tag) {\n      if (tag.match(/^-/)) {\n        tag = tag.replace(/^-/,'');\n        tagsExclude.push(tag);\n      } else if (tag !== '') {\n        tagsInclude.push(tag);\n      }\n    });\n\n    ret = tagsInclude.length > 0 ? '' : html;\n\n    if (tagsInclude.length > 0) {\n      tagsInclude.forEach(tag => {\n        let regEx = new RegExp(`<${tag}>([\\\\s\\\\S]*?)<\\/${tag}>`);\n        let matches = html.match(regEx);\n        let output = matches[0].replace(/<\\/?ngui-utils-[0-9]+>\\s*/g, ''); //remove <ngui-utils-xxx> and </ngui-utils-xxx>\n        ret = ret + output;\n      });\n    }\n\n    if (tagsExclude.length > 0) {\n      tagsExclude.forEach(tag => {\n        let regEx = new RegExp(`<${tag}>([\\\\s\\\\S]*?)<\\/${tag}>`);\n        ret = ret.replace(regEx, '');\n      });\n    }\n\n    return ret;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/utils/pipes/html-code.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport * as js_beautify from 'js-beautify/js';\n\n@Pipe({name: 'jsCode'})\nexport class JavascriptCodePipe implements PipeTransform {\n  transform(value: string): string {\n    value = value.toString();\n    let ret: string = value;\n    return js_beautify(value);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/utils/pipes/javascript-code.pipe.ts","import {Injectable} from \"@angular/core\";\nimport {MemoryStorage} from \"./memory-storage\";\n\n@Injectable()\nexport class Storage {\n  preference: any = 'sessionStorage';\n  storage: any;\n\n  constructor() {\n    // preference && (this.preference = preference);   //'localStorage' or 'sessionStorage'\n\n    if (this.preference == 'localStorage' && this.hasStorage('localStorage')) {\n      this.storage = window.localStorage\n    } else if(this.preference == 'sessionStorage' && this.hasStorage('sessionStorage')) {\n      this.storage = window.sessionStorage\n    } else {\n      this.storage = new MemoryStorage()\n    }\n  }\n\n  get length(): number                   { return this.storage.length; }\n  getItem(key: any)                   {\n    let strValue = this.storage.getItem(key);\n    try {\n      return JSON.parse(strValue);\n    } catch(e) {\n      return strValue;\n    }\n  }\n  setItem(key: string, value: any): void {\n    let strValue = typeof value === 'object' ? JSON.stringify(value) : value.toString();\n    this.storage.setItem(key, strValue);\n  }\n  removeItem(key: string): void          { this.storage.removeItem(key); }\n  clear(): void                          { this.storage.clear()  }\n\n  private hasStorage(name: string) {\n    try {\n      window[name].setItem('test', '1');\n      window[name].removeItem('test');\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/utils/services/storage.ts","import { NgModule } from '@angular/core';\n\nimport { scrollTo } from './dom-functions/scroll-to';\nimport { elementVisible } from './dom-functions/element-visible';\nimport { computedStyle } from './dom-functions/computed-style';\nimport { outerWidth } from './dom-functions/outer-width';\nimport { outerHeight } from './dom-functions/outer-height';\n\nimport { HtmlCodePipe } from './pipes/html-code.pipe';\nimport { JavascriptCodePipe } from './pipes/javascript-code.pipe';\nimport { NguiUtilsDirective } from \"./directives/utils.directive\";\n\n/* services */\nimport { MemoryStorage } from './services/memory-storage';\nimport { Storage } from './services/storage';\n\n@NgModule({\n  providers: [\n    MemoryStorage,\n    Storage\n  ],\n  declarations: [\n    HtmlCodePipe,\n    JavascriptCodePipe,\n    NguiUtilsDirective\n  ],\n  exports: [\n    HtmlCodePipe,\n    JavascriptCodePipe,\n    NguiUtilsDirective\n  ]\n})\nexport class NguiUtilsModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/utils/utils.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { ProductService } from './product.service';\nimport { CustomerlistComponent } from './customer/customerlist.component';\nimport { ProductModule } from './product/product.module';\nimport { NguiUtilsModule } from './Shared/utils/utils.module';\nimport { NguiAutoCompleteModule } from './Shared/autocomplete/auto-complete.module';\nimport { CustomereditComponent } from './customer/customeredit/customeredit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    CustomerlistComponent,\n    CustomereditComponent    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    RouterModule.forRoot([\n      { path: 'welcome', component: CustomerComponent },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\n    ]),\n    ProductModule,\n    NguiUtilsModule,\n    NguiAutoCompleteModule\n  ],\n  providers: [ProductService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Customer } from './customer';\nimport { ProductService } from '../product.service';\n\nimport { Http } from \"@angular/http\";\nimport { Observable } from 'rxjs/Observable';\nimport { ViewEncapsulation } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\n/*\nlet templateStr: string = `\n      \n  <fieldset><legend><h2>Source as HTTP URI String</h2></legend>\n    <ngui-utils-4>\n      <input  ngui-auto-complete\n        id=\"model4\"\n        [(ngModel)]=\"model4\"\n        placeholder=\"Enter Address(min. 2 chars)\"\n        [source]=\"googleGeoCode\" \n        no-match-found-text=\"No Match Found\"\n        list-formatter=\"formatted_address\"\n        path-to-data=\"results\"\n        loading-text=\"Google Is Thinking...\"\n        max-num-list=\"5\"\n        min-chars=\"2\" />\n      <br/>selected model4: {{model4 | json}}<br/><br/>\n    </ngui-utils-4>\n    <pre>{{templateStr | htmlCode:'ngui-utils-4'}}</pre>\n    <pre> source: {{googleGeoCode}}</pre>\n  </fieldset>\n `;\n */\n@Component({\n    selector: 'my-signup',\n   // template: templateStr,\n    templateUrl: './customer.component.html'\n   \n})\nexport class CustomerComponent {\n    constructor(\n         public http: Http,\n         private productService: ProductService,\n         private _sanitizer: DomSanitizer\n        ) {\n\n    }\n    //templateStr: any = templateStr;\n    //googleGeoCode: string = \"https://maps.googleapis.com/maps/api/geocode/json?address=:my_own_keyword\";\n    googleGeoCode: string = \"/sites/TestDev1/_api/SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.clientPeoplePickerSearchUser\";\n    customer: Customer= new Customer();\n    save(customerForm: NgForm) {\n        let formdata=customerForm.value;\n        this.productService.updatePeoplePickerFields(formdata).then(response =>{\n        console.log(\"end - updatePeoplePickerFields\");\n        console.log(formdata);\n        console.log(\"done - updatePeoplePickerFields\");\n        var json_string = JSON.stringify(customerForm.value);\n        var json_obj = JSON.parse(json_string);\n        json_obj['__metadata'] = { \"type\": \"SP.Data.HelloListListItem\" };\n        json_string = JSON.stringify( json_obj );\n        console.log( json_string );\n        this.productService.createCustomer(json_string)\n        .subscribe(products =>  this.productService.getCustomers(),\n                           error => console.log('testing error createCustomers: '));\n                         \n        });                \n    }\n }\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customer.component.ts","export class Customer {\n\n    constructor(\n        public FirstName = '',\n        public LastName = '',\n        public Email = '',\n        public ID?: number,\n        public UserNameId?: number,\n        public UserName01Id?: number,\n        public UserName02Id?: number,\n       // public sendCatalog = false,\n        public addressType = 'home',\n        public street1?: string,\n        public street2?: string,\n        public city?: string,\n        public state = '',\n        public zip?: string) { }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customer.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Customer } from '../customer/customer';\nimport { CustomerlistComponent } from '../customer/customerlist.component';\nimport { ProductService } from '../product.service';\nimport { CustomereditComponent } from '../customer/customeredit/customeredit.component';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild([\n      { path: 'products', component: CustomerlistComponent },\n      { path: 'customeredit/:id',component: CustomereditComponent}\n     ])],\n \n  exports: [RouterModule]\n})\nexport class ProductRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/product-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductRoutingModule } from './product-routing.module';\n//import { CustomerlistComponent } from '../customer/customerlist.component';\n//import { ProductService } from '../product.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    ProductRoutingModule\n  ],\n  declarations: [\n     // CustomerlistComponent\n     // CustomerComponent\n    ],\n  providers: [\n     // ProductService\n    ]\n})\nexport class ProductModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/product.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 225\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customeredit/customeredit.component.css\n// module id = 226\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customerlist.component.css\n// module id = 227\n// module chunks = 1","module.exports = \"<div>\\n        <nav class='navbar navbar-default'>\\n            <div class='container-fluid'>\\n                <a class='navbar-brand'>{{pageTitle}}</a>\\n                <ul class='nav navbar-nav'>\\n                    <li><a [routerLink]=\\\"['/welcome']\\\">Home</a></li>\\n                    <li><a [routerLink]=\\\"['/products']\\\">Product List</a></li>\\n                    <li><a [routerLink]=\\\"['/productEdit/0']\\\">Add Product</a></li>\\n                </ul>\\n            </div>\\n        </nav>\\n        <div class='container'>\\n            <router-outlet></router-outlet>\\n        </div>\\n     </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 232\n// module chunks = 1","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n        Sign Up!\\n    </div>\\n    <!-- start \\n     <fieldset><legend><h2>Source as HTTP URI String</h2></legend>\\n    <ngui-utils-4>\\n      <input  ngui-auto-complete\\n        id=\\\"model4\\\"\\n        [(ngModel)]=\\\"model4\\\"\\n        placeholder=\\\"Enter Address(min. 2 chars)\\\"\\n        [source]=\\\"googleGeoCode\\\" \\n        no-match-found-text=\\\"No Match Found\\\"\\n        list-formatter=\\\"formatted_address\\\"\\n        path-to-data=\\\"results\\\"\\n        loading-text=\\\"Google Is Thinking...\\\"\\n        max-num-list=\\\"5\\\"\\n        min-chars=\\\"2\\\" />\\n    <!--  <br/>selected model4: {{model4 | json}}<br/><br/>\\n    </ngui-utils-4>\\n    <pre>{{templateStr | htmlCode:'ngui-utils-4'}}</pre>\\n    <pre> source: {{googleGeoCode}}</pre>\\n  </fieldset>-->\\n<!-- end -->\\n    <div class=\\\"panel-body\\\">\\n        <form class=\\\"form-horizontal\\\"\\n              novalidate\\n              (ngSubmit)=\\\"save(signupForm)\\\"\\n              #signupForm=\\\"ngForm\\\">\\n            <fieldset>\\n                <div class=\\\"form-group\\\"\\n                    [ngClass]=\\\"{'has-error': (firstNameVar.touched || firstNameVar.dirty) && !firstNameVar.valid }\\\">\\n                    <label class=\\\"col-md-2 control-label\\\" \\n                           for=\\\"firstNameId\\\">First Name</label>\\n\\n                    <div class=\\\"col-md-8\\\">\\n                        <input class=\\\"form-control\\\" \\n                               id=\\\"firstNameId\\\" \\n                               type=\\\"text\\\" \\n                               placeholder=\\\"First Name (required)\\\" \\n                               required \\n                               minlength=\\\"3\\\"\\n                               [(ngModel)]=customer.FirstName\\n                               name=\\\"FirstName\\\"\\n                               #firstNameVar=\\\"ngModel\\\" />\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(firstNameVar.touched || firstNameVar.dirty) && firstNameVar.errors\\\">\\n                            <span *ngIf=\\\"firstNameVar.errors.required\\\">\\n                                Please enter your first name.\\n                            </span>\\n                            <span *ngIf=\\\"firstNameVar.errors.minlength\\\">\\n                                The first name must be longer than 3 characters.\\n                            </span>\\n                        </span>\\n                    </div>\\n                </div>\\n\\n <div class=\\\"form-group\\\"\\n                    [ngClass]=\\\"{'has-error': (UserNameVar.touched || UserNameVar.dirty) && !UserNameVar.valid }\\\">\\n                    <label class=\\\"col-md-2 control-label\\\" \\n                           for=\\\"UserNameId\\\">User Name</label>\\n                   <div class=\\\"col-md-8\\\">\\n                        <ngui-utils-4>\\n                            <input  ngui-auto-complete\\n                                id=\\\"UserNameId\\\"\\n                                [(ngModel)]=\\\"customer.UserNameId\\\"\\n                                placeholder=\\\"Enter Address(min. 2 chars)\\\"\\n                                [source]=\\\"googleGeoCode\\\" \\n                                no-match-found-text=\\\"No Match Found\\\"\\n                                list-formatter=\\\"DisplayText\\\"\\n                                path-to-data=\\\"results\\\"\\n                                loading-text=\\\"Google Is Thinking...\\\"\\n                                minlength=\\\"2\\\"\\n                                max-num-list=\\\"5\\\"\\n                                name=\\\"UserNameId\\\"\\n                                #UserNameVar=\\\"ngModel\\\"\\n                                min-chars=\\\"2\\\" />\\n                                <br/>selected model4: {{customer.UserNameId | json}}<br/><br/>\\n                                </ngui-utils-4>\\n                                  <pre> source: {{googleGeoCode}}</pre>\\n                                 <span class=\\\"help-block\\\" *ngIf=\\\"(UserNameVar.touched || UserNameVar.dirty) && UserNameVar.errors\\\">\\n                            <span *ngIf=\\\"UserNameVar.errors.required\\\">\\n                                Please select user name.\\n                            </span>\\n                            <span *ngIf=\\\"UserNameVar.errors.minlength\\\">\\n                                Please enter atleast 2 characters to search for user.\\n                            </span>\\n                            \\n                        </span>\\n                    </div>\\n                </div>\\n                <!-- test-->\\n<div class=\\\"form-group\\\"\\n                    [ngClass]=\\\"{'has-error': (UserName01Var.touched || UserName01Var.dirty) && !UserName01Var.valid }\\\">\\n                    <label class=\\\"col-md-2 control-label\\\" \\n                           for=\\\"UserName01Id\\\">User Name 01</label>\\n                   <div class=\\\"col-md-8\\\">\\n                        <ngui-utils-4>\\n                            <input  ngui-auto-complete\\n                                id=\\\"UserName01Id\\\"\\n                                [(ngModel)]=\\\"customer.UserName01Id\\\"\\n                                placeholder=\\\"Enter Address(min. 2 chars)\\\"\\n                                [source]=\\\"googleGeoCode\\\" \\n                                no-match-found-text=\\\"No Match Found\\\"\\n                                list-formatter=\\\"DisplayText\\\"\\n                                path-to-data=\\\"results\\\"\\n                                loading-text=\\\"Google Is Thinking...\\\"\\n                                minlength=\\\"2\\\"\\n                                max-num-list=\\\"5\\\"\\n                                name=\\\"UserName01Id\\\"\\n                                #UserName01Var=\\\"ngModel\\\"\\n                                min-chars=\\\"2\\\" />\\n                                <br/>selected model4: {{customer.UserName01Id | json}}<br/><br/>\\n                                </ngui-utils-4>\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"(UserName01Var.touched || UserName01Var.dirty) && UserName01Var.errors\\\">\\n                            <span *ngIf=\\\"UserName01Var.errors.required\\\">\\n                                Please select user name 01.\\n                            </span>\\n                            <span *ngIf=\\\"UserName01Var.errors.minlength\\\">\\n                                Please enter atleast 2 characters to search for user.\\n                            </span>\\n                            \\n                        </span>\\n                    </div>\\n                </div>\\n \\n\\n <div class=\\\"form-group\\\"\\n                    [ngClass]=\\\"{'has-error': (UserName02Var.touched || UserName02Var.dirty) && !UserName02Var.valid }\\\">\\n                    <label class=\\\"col-md-2 control-label\\\" \\n                           for=\\\"UserName02Id\\\">User Name 02</label>\\n                   <div class=\\\"col-md-8\\\">\\n                        <ngui-utils-4>\\n                            <input  ngui-auto-complete\\n                                id=\\\"UserName02Id\\\"\\n                                [(ngModel)]=\\\"customer.UserName02Id\\\"\\n                                placeholder=\\\"Enter Address(min. 2 chars)\\\"\\n                                [source]=\\\"googleGeoCode\\\" \\n                                no-match-found-text=\\\"No Match Found\\\"\\n                                list-formatter=\\\"DisplayText\\\"\\n                                path-to-data=\\\"results\\\"\\n                                loading-text=\\\"Google Is Thinking...\\\"\\n                                minlength=\\\"2\\\"\\n                                max-num-list=\\\"5\\\"\\n                                name=\\\"UserName02Id\\\"\\n                                #UserName02Var=\\\"ngModel\\\"\\n                                min-chars=\\\"2\\\" />\\n                                <br/>selected model4: {{customer.UserName02Id | json}}<br/><br/>\\n                                </ngui-utils-4>\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"(UserName02Var.touched || UserName02Var.dirty) && UserName02Var.errors\\\">\\n                            <span *ngIf=\\\"UserName02Var.errors.required\\\">\\n                                Please select user name 01.\\n                            </span>\\n                            <span *ngIf=\\\"UserName02Var.errors.minlength\\\">\\n                                Please enter atleast 2 characters to search for user.\\n                            </span>\\n                            \\n                        </span>\\n                    </div>\\n                </div>\\n \\n                <!--test-->\\n                <div class=\\\"form-group\\\"\\n                    [ngClass]=\\\"{'has-error': (lastNameVar.touched || lastNameVar.dirty) && !lastNameVar.valid }\\\">\\n                    <label class=\\\"col-md-2 control-label\\\" \\n                        for=\\\"lastNameId\\\">Last Name</label>\\n\\n                    <div class=\\\"col-md-8\\\">\\n                        <input class=\\\"form-control\\\" \\n                               id=\\\"lastNameId\\\" \\n                               type=\\\"text\\\" \\n                               placeholder=\\\"Last Name (required)\\\" \\n                               required \\n                               maxlength=\\\"50\\\"\\n                               [(ngModel)]=\\\"customer.LastName\\\"\\n                               name=\\\"LastName\\\"\\n                               #lastNameVar=\\\"ngModel\\\" />\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(lastNameVar.touched || lastNameVar.dirty) && lastNameVar.errors\\\">\\n                            <span *ngIf=\\\"lastNameVar.errors.required\\\">\\n                                Please enter your last name.\\n                            </span>\\n                        </span>\\n                    </div>\\n                </div>\\n               <div class=\\\"form-group\\\"\\n                    [ngClass]=\\\"{'has-error': (emailVar.touched || emailVar.dirty) && !emailVar.valid }\\\">\\n                    <label class=\\\"col-md-2 control-label\\\" \\n                        for=\\\"emailId\\\">Email</label>\\n\\n                    <div class=\\\"col-md-8\\\">\\n                        <input class=\\\"form-control\\\" \\n                               id=\\\"emailId\\\" \\n                               type=\\\"text\\\" \\n                               placeholder=\\\"Email (required)\\\" \\n                               required\\n                               pattern=\\\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\"\\n                               [(ngModel)]=\\\"customer.Email\\\"\\n                               name=\\\"Email\\\"\\n                               #emailVar=\\\"ngModel\\\" />\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(emailVar.touched || emailVar.dirty) && emailVar.errors\\\">\\n                            <span *ngIf=\\\"emailVar.errors.required\\\">\\n                                Please enter your email address.\\n                            </span>\\n                            <span *ngIf=\\\"emailVar.errors.pattern\\\">\\n                                Please enter a valid email address.\\n                            </span>\\n\\n                            <!-- This one does not work -->\\n                            <span *ngIf=\\\"emailVar.errors.email\\\">\\n                                Please enter a valid email address.\\n                            </span>\\n                        </span>\\n                    </div>\\n                </div>\\n               \\n                <!--\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-md-offset-1 col-md-8 checkbox\\\" >\\n                        <label>\\n                            <input id=\\\"sendCatalogId\\\"\\n                                   type=\\\"checkbox\\\"\\n                                   [(ngModel)]=\\\"customer.sendCatalog\\\"\\n                                   name=\\\"sendCatalog\\\" >\\n                            Send me your catalog\\n                        </label>\\n                    </div>\\n                </div>\\n                \\n                <div *ngIf=\\\"customer.sendCatalog\\\">\\n                    <div class=\\\"form-group\\\" >\\n                        <label class=\\\"col-md-2 control-label\\\">Address Type</label>\\n                        <div class=\\\"col-md-8\\\">\\n                                <label class=\\\"radio-inline\\\">\\n                                    <input type=\\\"radio\\\" id=\\\"addressType1Id\\\" value=\\\"home\\\"\\n                                           [(ngModel)]=\\\"customer.addressType\\\"\\n                                           name=\\\"addressType\\\">Home\\n                                </label>\\n                                <label class=\\\"radio-inline\\\">\\n                                    <input type=\\\"radio\\\" id=\\\"addressType1Id\\\" value=\\\"work\\\"\\n                                           [(ngModel)]=\\\"customer.addressType\\\"\\n                                           name=\\\"addressType\\\">Work\\n                                </label>\\n                                <label class=\\\"radio-inline\\\">\\n                                    <input type=\\\"radio\\\" id=\\\"addressType1Id\\\" value=\\\"other\\\"\\n                                           [(ngModel)]=\\\"customer.addressType\\\"\\n                                           name=\\\"addressType\\\">Other\\n                                </label>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-md-2 control-label\\\" \\n                            for=\\\"street1Id\\\">Street Address 1</label>\\n                        <div class=\\\"col-md-8\\\">\\n                            <input type=\\\"text\\\" \\n                                   class=\\\"form-control\\\" \\n                                   id=\\\"street1Id\\\" \\n                                   placeholder=\\\"Street address\\\"\\n                                   [(ngModel)]=\\\"customer.street1\\\"\\n                                   name=\\\"street1\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-md-2 control-label\\\" \\n                            for=\\\"street2Id\\\">Street Address 2</label>\\n                        <div class=\\\"col-md-8\\\">\\n                            <input type=\\\"text\\\" \\n                                   class=\\\"form-control\\\" \\n                                   id=\\\"street2Id\\\"\\n                                   placeholder=\\\"Street address (second line)\\\"\\n                                   [(ngModel)]=\\\"customer.street2\\\"\\n                                   name=\\\"street2\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-md-2 control-label\\\" \\n                            for=\\\"cityId\\\">City, State, Zip Code</label>\\n                        <div class=\\\"col-md-3\\\">\\n                            <input type=\\\"text\\\" \\n                                   class=\\\"form-control\\\" \\n                                   id=\\\"cityId\\\" \\n                                   placeholder=\\\"City\\\"\\n                                   [(ngModel)]=\\\"customer.city\\\"\\n                                   name=\\\"city\\\">\\n                        </div>\\n                        <div class=\\\"col-md-3\\\">\\n                            <select class=\\\"form-control\\\"\\n                                    id=\\\"stateId\\\"\\n                                    [(ngModel)]=\\\"customer.state\\\"\\n                                    name=\\\"state\\\">\\n                                <option value=\\\"\\\" disabled selected hidden>Select a State...</option>\\n                                <option value=\\\"AL\\\">Alabama</option>\\n                                <option value=\\\"AK\\\">Alaska</option>\\n                                <option value=\\\"AZ\\\">Arizona</option>\\n                                <option value=\\\"AR\\\">Arkansas</option>\\n                                <option value=\\\"CA\\\">California</option>\\n                                <option value=\\\"CO\\\">Colorado</option>\\n                                <option value=\\\"WI\\\">Wisconsin</option>\\n                                <option value=\\\"WY\\\">Wyoming</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                        <input type=\\\"number\\\"\\n                                   class=\\\"form-control\\\" \\n                                   id=\\\"zipId\\\" \\n                                   placeholder=\\\"Zip Code\\\"\\n                                   [(ngModel)]=\\\"customer.zip\\\"\\n                                   name=\\\"zip\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n-->\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-md-4 col-md-offset-2\\\">\\n                        <span>\\n                            <button class=\\\"btn btn-primary\\\"\\n                                    type=\\\"submit\\\"\\n                                    [disabled]=\\\"!signupForm.valid\\\">\\n                                Save\\n                            </button>\\n                        </span>\\n                    </div>\\n                </div>\\n            </fieldset>\\n        </form>\\n    </div>\\n</div>\\n<br>Dirty: {{ signupForm.dirty }} \\n<br>Touched: {{ signupForm.touched }}\\n<br>Valid: {{ signupForm.valid }}\\n<br>Value: {{ signupForm.value | json }}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customer.component.html\n// module id = 233\n// module chunks = 1","module.exports = \"\\n  <div>\\n      \\n    </div>\\n<h3><i>Showing product details for product: {{id}}</i></h3>\\n<form [formGroup]=\\\"heroForm\\\" (ngSubmit)=\\\"onSubmit($event)\\\" novalidate>\\n   <div style=\\\"margin-bottom: 1em\\\">\\n    <button type=\\\"submit\\\"\\n            [disabled]=\\\"heroForm.pristine\\\" class=\\\"btn btn-success\\\">Save</button> &nbsp;\\n    <button type=\\\"reset\\\" (click)=\\\"revert()\\\"\\n            [disabled]=\\\"heroForm.pristine\\\" class=\\\"btn btn-danger\\\">Revert</button>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"center-block\\\">First Name:\\n      <input class=\\\"form-control\\\" formControlName=\\\"FirstName\\\">\\n    </label>\\n    <label class=\\\"center-block\\\">Last Name:\\n      <input class=\\\"form-control\\\" formControlName=\\\"LastName\\\">\\n    </label>\\n    <label class=\\\"center-block\\\">Email:\\n      <input class=\\\"form-control\\\" formControlName=\\\"Email\\\">\\n    </label>\\n    <label class=\\\"center-block\\\">UserName:\\n      <input class=\\\"form-control\\\" formControlName=\\\"UserNameId\\\">\\n    </label>\\n    <label class=\\\"center-block\\\">UserName01:\\n      <input class=\\\"form-control\\\" formControlName=\\\"UserName01Id\\\">\\n    </label>\\n    <label class=\\\"center-block\\\">UserName02:\\n      <input class=\\\"form-control\\\" formControlName=\\\"UserName02Id\\\">\\n    </label>\\n  </div>\\n</form>\\n<p>Form value: {{ heroForm.value | json }}</p>\\n<p>Form status: {{ heroForm.status | json }}</p>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customeredit/customeredit.component.html\n// module id = 234\n// module chunks = 1","module.exports = \"<p>\\n  customerlist works!\\n</p>\\n<div class='panel panel-primary'>\\n    <div class='panel-heading'>\\n        {{pageTitle}}\\n    </div>\\n    <!-- Filter the Products   -->\\n    <div class='panel-body'>\\n      <!--\\n        <div class='row'>\\n            <div class='col-md-2'>Filter by:</div>\\n            <div class='col-md-4'>\\n                <input type='text' [(ngModel)]='listFilter' />\\n            </div>\\n        </div>\\n        <div class='row' *ngIf='listFilter'>\\n            <div class='col-md-6'>\\n                <h3>Filtered by: {{listFilter}} </h3>\\n            </div>\\n        </div>\\n\\n        <div class='has-error' *ngIf='errorMessage'>{{errorMessage}}</div>\\n-->\\n        <div class='table-responsive'>\\n            <table class='table'\\n                   *ngIf='products && products.length'>\\n                <thead>\\n                    <tr>\\n                        <th>Edit</th>\\n                        <th>FirstName</th>\\n                        <th>LastName</th>\\n                        <th>UserName</th>\\n                        <th>UserName01</th>\\n                        <th>UserName02</th>\\n                        <th>Email</th>\\n                       </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor='let product of products'>\\n                        <td><a [routerLink]=\\\"['/customeredit', product.ID]\\\"> {{ product.ID }}</a></td>\\n                        <td>{{product.FirstName}}</td>\\n                        <td>{{ product.LastName }}</td>\\n                        <td>{{ product.UserNameId }}</td>\\n                        <td>{{ product.UserName01Id }}</td>\\n                        <td>{{ product.UserName02Id }}</td>\\n                        <td>{{ product.Email }}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customerlist.component.html\n// module id = 235\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/toPromise';\nimport { Customer } from './customer/customer';\n@Injectable()\nexport class ProductService {\n  private customerUrl = '/sites/TestDev1/_api/web/lists/GetByTitle('+\"'HelloList'\"+')/items';\n  public userNameID:any;\n  public form:any;\n  public formproperty:any;\n  public BAR=JSON.stringify({\"FirstName\":\"test1\",\"LastName\":\"test1\",\"Email\":\"test1@test.com\",\"__metadata\":{\"type\":\"SP.Data.HelloListListItem\"}});\n  constructor(private http: Http) { }\n \n updateCustomer(customerInfo: any,ID: number): Observable<Customer> {\n    let itemURL = this.customerUrl+\"(\"+ID+\")\";\n    console.log(itemURL);\n    console.log(customerInfo);\n    console.log(ID);\n    let currentrequestdigest=(<HTMLInputElement>document.getElementById('__REQUESTDIGEST')).value;\n    let headers = new Headers({ \n            \"accept\": \"application/json;odata=verbose\",\n            \"X-RequestDigest\": currentrequestdigest,\n            \"content-Type\": \"application/json;odata=verbose\",\n            \"If-Match\": \"*\"\n            });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.patch(itemURL, customerInfo , options)\n                    .map(this.extractData)\n                    .do(data => console.log(\"Item Updated!!\"))\n                    .catch(this.handleError);\n    \n  }\n  getCustomers(): Observable<Customer[]> {\n    let headers = new Headers({ 'Accept': 'application/json;odata=verbose' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.get(this.customerUrl, options)\n                    .map(this.extractData)\n                    .catch(this.handleError);\n  }\n\n  getCustomerbyId(id: number): Promise<any> {\n    let headers = new Headers({ 'Accept': 'application/json;odata=verbose' });\n    let options = new RequestOptions({ headers: headers });\n    let itemURL = this.customerUrl+\"(\"+id+\")\";\n    return this.http.get(itemURL, options)\n                    .toPromise()\n                    .then(this.extractEditItemData)\n                    .catch(this.handleError);\n  }\n  \n  private extractEditItemData(response: Response) {\n        console.log(response.json());\n        let data = response.json();\n        return data.d || {};\n  }\n\n  updatePeoplePickerFields(formData: any): Promise<any>{\n    let promises_array:Array<any> =[];\n    let listOfPeoplPckrFields=[\"UserNameId\",\"UserName01Id\",\"UserName02Id\"];\n    var keys = Object.keys(formData);\n    for (var i = 0; i < keys.length; i++) {\n            if(listOfPeoplPckrFields.includes(keys[i]))\n            {\n               var prop = keys[i];\n               var val = formData[keys[i]];\n               let p1=this.GetUserId(formData,prop,formData[keys[i]]);\n               promises_array.push(p1);\n            }\n        }\n        return Promise.all(promises_array);\n  }\n  GetUserId(form: any,property:any,userid: any): Promise<any>  {\n    let formData=form;\n    let formproperty=property;\n    let siteUrl =  \"/sites/TestDev1\";\n    let accountName = userid;\n    accountName = encodeURIComponent(accountName);\n    let userUrl= siteUrl+\"/_api/web/siteusers?$select=Id,Title,LoginName,Email&$filter=Title eq '\"+accountName+\"'\";\n    let headers = new Headers({ 'Accept': 'application/json;odata=verbose' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.get(userUrl, options)\n               .toPromise()\n               .then((response) => {\n                let data = response.json();\n                console.log(data);\n                formData[formproperty]=Number(data.d.results[0].Id);\n                return Promise.resolve(formData);\n               })\n               .catch(this.handleError);\n   }\n\n  private extractUserId(response: Response) {\n        let data = response.json();\n        return Promise.resolve();\n  }\n\n  createCustomer(customerInfo: any): Observable<Customer> {\n    let currentrequestdigest=(<HTMLInputElement>document.getElementById('__REQUESTDIGEST')).value;\n    let headers = new Headers({ \"accept\": \"application/json;odata=verbose\",\n            \"X-RequestDigest\": currentrequestdigest,\n            \"content-Type\": \"application/json;odata=verbose\",\n            });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.customerUrl, customerInfo , options)\n                    .map(this.extractData)\n                    .do(data => this.getCustomers())\n                    .catch(this.handleError);\n  }\n  \n  private extractData(response: Response) {\n        console.log(response.json());\n        let data = response.json();\n        return data.d.results || {};\n  }\n\n  private handleError(error: Response): Observable<any> {\n        return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product.service.ts","import {\n  Component,\n  ElementRef,\n  Input,\n  Output,\n  OnInit,\n  ViewEncapsulation,\n  EventEmitter,\n  ViewChild\n} from \"@angular/core\";\nimport { NguiAutoComplete } from \"./auto-complete\";\n\n/**\n * show a selected date in monthly calendar\n * Each filteredList item has the following property in addition to data itself\n *   1. displayValue as string e.g. Allen Kim\n *   2. dataValue as any e.g.\n */\n@Component({\n  selector: \"ngui-auto-complete\",\n  template: `\n  <div #autoCompleteContainer class=\"ngui-auto-complete\">\n    <!-- keyword input -->\n    <input *ngIf=\"showInputTag\"\n           #autoCompleteInput class=\"keyword\"\n           placeholder=\"{{placeholder}}\"\n           (focus)=\"showDropdownList($event)\"\n           (blur)=\"hideDropdownList()\"\n           (keydown)=\"inputElKeyHandler($event)\"\n           (input)=\"reloadListInDelay($event)\"\n           [(ngModel)]=\"keyword\" />\n\n    <!-- dropdown that user can select -->\n    <ul *ngIf=\"dropdownVisible\" [class.empty]=\"emptyList\">\n      <li *ngIf=\"isLoading\" class=\"loading\">{{loadingText}}</li>\n      <li *ngIf=\"minCharsEntered && !isLoading && !filteredList.length\"\n           (mousedown)=\"selectOne('')\"\n           class=\"no-match-found\">{{noMatchFoundText || 'No Result Found'}}</li>\n      <li *ngIf=\"blankOptionText && filteredList.length\"\n          (mousedown)=\"selectOne('')\"\n          class=\"blank-item\">{{blankOptionText}}</li>\n      <li class=\"item\"\n          *ngFor=\"let item of filteredList; let i=index\"\n          (mousedown)=\"selectOne(item)\"\n          [ngClass]=\"{selected: i === itemIndex}\"\n          [innerHtml]=\"autoComplete.getFormattedListItem(item)\">\n      </li>\n    </ul>\n\n  </div>`,\n  providers: [NguiAutoComplete],\n  styles: [`\n  @keyframes slideDown {\n    0% {\n      transform:  translateY(-10px);\n    }\n    100% {\n      transform: translateY(0px);\n    }\n  }\n  .ngui-auto-complete {\n    background-color: transparent;\n  }\n  .ngui-auto-complete > input {\n    outline: none;\n    border: 0;\n    padding: 2px; \n    box-sizing: border-box;\n    background-clip: content-box;\n  }\n\n  .ngui-auto-complete > ul {\n    background-color: #fff;\n    margin: 0;\n    width : 100%;\n    overflow-y: auto;\n    list-style-type: none;\n    padding: 0;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    animation: slideDown 0.1s;\n  }\n  .ngui-auto-complete > ul.empty {\n    display: none;\n  }\n\n  .ngui-auto-complete > ul li {\n    padding: 2px 5px;\n    border-bottom: 1px solid #eee;\n  }\n\n  .ngui-auto-complete > ul li.selected {\n    background-color: #ccc;\n  }\n\n  .ngui-auto-complete > ul li:last-child {\n    border-bottom: none;\n  }\n\n  .ngui-auto-complete > ul li:hover {\n    background-color: #ccc;\n  }`\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NguiAutoCompleteComponent implements OnInit {\n\n  /**\n   * public input properties\n   */\n  @Input(\"list-formatter\") listFormatter: (arg: any) => string;\n  @Input(\"source\") source: any;\n  @Input(\"path-to-data\") pathToData: string;\n  @Input(\"min-chars\") minChars: number = 0;\n  @Input(\"placeholder\") placeholder: string;\n  @Input(\"blank-option-text\") blankOptionText: string;\n  @Input(\"no-match-found-text\") noMatchFoundText: string;\n  @Input(\"accept-user-input\") acceptUserInput: boolean;\n  @Input(\"loading-text\") loadingText: string = \"Loading\";\n  @Input(\"max-num-list\") maxNumList: number;\n  @Input(\"show-input-tag\") showInputTag: boolean = true;\n  @Input(\"show-dropdown-on-init\") showDropdownOnInit: boolean = false;\n  @Input(\"tab-to-select\") tabToSelect: boolean = true;\n  @Input(\"match-formatted\") matchFormatted: boolean = false;\n\n  @Output() valueSelected = new EventEmitter();\n  @ViewChild('autoCompleteInput') autoCompleteInput: ElementRef;\n  @ViewChild('autoCompleteContainer') autoCompleteContainer: ElementRef;\n\n  el: HTMLElement;           // this component  element `<ngui-auto-complete>`\n\n  dropdownVisible: boolean = false;\n  isLoading: boolean = false;\n\n  filteredList: any[] = [];\n  minCharsEntered: boolean = false;\n  itemIndex: number = 0;\n  keyword: string;\n\n  isSrcArr(): boolean {\n    return (this.source.constructor.name === \"Array\");\n  }\n\n  /**\n   * constructor\n   */\n  constructor(\n    elementRef: ElementRef,\n    public autoComplete: NguiAutoComplete\n  ) {\n    this.el = elementRef.nativeElement;\n  }\n\n  /**\n   * user enters into input el, shows list to select, then select one\n   */\n  ngOnInit(): void {\n    this.autoComplete.source = this.source;\n    this.autoComplete.pathToData = this.pathToData;\n    this.autoComplete.listFormatter = this.listFormatter;\n    setTimeout(() => {\n      if (this.autoCompleteInput) {\n        this.autoCompleteInput.nativeElement.focus()\n      }\n      if (this.showDropdownOnInit) {\n        this.showDropdownList({target: {value: ''}});\n      }\n    });\n  }\n\n  reloadListInDelay = (evt: any): void  => {\n    let delayMs = this.isSrcArr() ? 10 : 500;\n    let keyword = evt.target.value;\n    this.delay(() => this.reloadList(keyword), delayMs);\n  };\n\n  showDropdownList(event: any): void {\n    this.dropdownVisible = true;\n    this.reloadList(event.target.value);\n  }\n\n  hideDropdownList(): void {\n    this.dropdownVisible = false;\n  }\n  \n  findItemFromSelectValue(selectText: string): any {\n    let matchingItems = this.filteredList\n                            .filter(item => ('' + item) === selectText);\n    return matchingItems.length ? matchingItems[0] : null;\n  }\n\n  reloadList(keyword: string): void {\n    this.filteredList = [];\n    if (keyword.length < (this.minChars || 0)) {\n      this.minCharsEntered = false;\n      return;\n    } else {\n      this.minCharsEntered = true;\n    }\n\n    if (this.isSrcArr()) {    // local source\n      this.isLoading = false;\n      this.filteredList = this.autoComplete.filter(this.source, keyword, this.matchFormatted);\n      if (this.maxNumList) {\n        this.filteredList = this.filteredList.slice(0, this.maxNumList);\n      }\n    } else {   \n      // remote source\n      this.isLoading = true;\n\n      if (typeof this.source === \"function\") {\n        // custom function that returns observable\n        this.source(keyword).subscribe(\n          resp => {\n            if (this.pathToData) {\n              let paths = this.pathToData.split(\".\");\n              paths.forEach(prop => resp = resp[prop]);\n            }\n            this.filteredList = resp;\n            if (this.maxNumList) {\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\n            }\n          },\n          error => null,\n          () => this.isLoading = false // complete\n        );\n      } else {\n        // remote source\n        this.autoComplete.getRemoteData(keyword).subscribe(resp => {\n            this.filteredList = (<any>resp);\n            if (this.maxNumList) {\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\n            }\n          },\n          error => null,\n          () => this.isLoading = false // complete\n        );\n      }\n    }\n  }\n\n  selectOne(data: any) {\n    console.log('selectOne');\n    console.log(data);\n   /* this.autoComplete.GetUserId(data.Key)\n        .subscribe(users =>  console.log(\"subscribe users\"),\n                           error => console.log('testing users error '));\n                           \n    this.autoComplete.GetUserId(data.DisplayText)\n        .subscribe(userID =>  this.valueSelected.emit(userID),\n                           error => console.log('testing users error '));\n                           */\n   // this.autoComplete.GetUserId(data.Key);\n  //  console.log(data.key);\n  //  console.log(userID);\n   // this.autoComplete.GetUserId(data.DisplayText);\n    //this.valueSelected.emit(data);\n   this.valueSelected.emit(data.DisplayText);\n  };\n\n \n  inputElKeyHandler = (evt: any) => {\n    let totalNumItem = this.filteredList.length;\n    switch (evt.keyCode) {\n      case 27: // ESC, hide auto complete\n        break;\n\n      case 38: // UP, select the previous li el\n        this.itemIndex = (totalNumItem + this.itemIndex - 1) % totalNumItem;\n        this.scrollToView(this.itemIndex);\n        break;\n\n      case 40: // DOWN, select the next li el or the first one\n        this.dropdownVisible = true;\n        this.itemIndex = (totalNumItem + this.itemIndex + 1) % totalNumItem;\n        this.scrollToView(this.itemIndex);\n        break;\n\n      case 13: // ENTER, choose it!!\n        if (this.filteredList.length > 0) {\n          this.selectOne(this.filteredList[this.itemIndex]);\n        }\n        evt.preventDefault();\n        break;\n\n      case 9: // TAB, choose if tab-to-select is enabled\n        if (this.tabToSelect && this.filteredList.length > 0) {\n          this.selectOne(this.filteredList[this.itemIndex]);\n        }\n        break;\n    }\n  };\n\n\n  scrollToView(index) {\n    const container = this.autoCompleteContainer.nativeElement;\n    const ul = container.querySelector('ul');\n    const li = ul.querySelector('li');  //just sample the first li to get height\n    const liHeight = li.offsetHeight;\n    const scrollTop = ul.scrollTop;\n    const viewport = scrollTop + ul.offsetHeight;\n    const scrollOffset = liHeight * index;\n    if (scrollOffset < scrollTop || (scrollOffset + liHeight) > viewport) {\n      ul.scrollTop = scrollOffset;\n    }\n  }\n\n  get emptyList(): boolean {\n    return !(\n      this.isLoading ||\n      (this.minCharsEntered && !this.isLoading && !this.filteredList.length) ||\n      (this.filteredList.length)\n    );\n  }\n\n  private delay = (function () {\n    let timer = 0;\n    return function (callback: any, ms: number) {\n      clearTimeout(timer);\n      timer = setTimeout(callback, ms);\n    };\n  })();\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/autocomplete/auto-complete.component.ts","import { Injectable, Optional } from \"@angular/core\";\nimport { Http, Response, Headers, RequestOptions } from \"@angular/http\";\nimport { Observable } from \"rxjs\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * provides auto-complete related utility functions\n */\n@Injectable()\nexport class NguiAutoComplete {\n\n  public source: string;\n  public pathToData: string;\n  public listFormatter: (arg: any) => string;\n\n  constructor(@Optional() private http: Http) {\n    // ...\n  }\n\n  filter(list: any[], keyword: string, matchFormatted: boolean) {\n    return list.filter(\n      el => {\n        let objStr = matchFormatted ? this.getFormattedListItem(el).toLowerCase() : JSON.stringify(el).toLowerCase();\n        keyword = keyword.toLowerCase();\n        return objStr.indexOf(keyword) !== -1;\n      }\n    );\n  }\n\n   GetUserId(data: any): Observable<Response>{\n     console.log(\"GetUserId\");\n     console.log(data);\n    /// change this prefix according to the environment. \n    /// In below sample, windows authentication is considered.\n    let prefix = \"i: 0#.f|membership|\";\n    /// get the site url\n    let siteUrl =  \"/sites/TestDev1\";\n    /// add prefix, this needs to be changed based on scenario\n    //let accountName = prefix + data;\n    let accountName = data;\n    console.log(accountName);\n    accountName = encodeURIComponent(accountName);\n    console.log(accountName);\n    console.log(\"data\");\n   // let userUrl = siteUrl+\"/_api/web/siteusers(@v)?@v='\"+ accountName +\"'\";\n   let userUrl= siteUrl+\"/_api/web/siteusers?$select=Id,Title,LoginName,Email&$filter=Title eq '\"+accountName+\"'\";\n    console.log(userUrl);\n    \n    let headers = new Headers({ 'Accept': 'application/json;odata=verbose' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.get(userUrl, options)\n                    .map(this.extractData)\n                    //.do(data => console.log(data))\n                    .catch(this.handleError);\n   }\n   private extractData(response: Response) {\n        console.log(response);\n        let data = response.json();\n        console.log(\"Body\");\n        console.log(data);\n        console.log(data.d.results[0].Id);\n        return data.d.results[0].Id || {};\n    }\n\n    private handleError(error: Response): Observable<any> {\n        console.log(\"error\");\n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    }\n\n  getFormattedListItem(data: any) {\n    let formatted;\n    let formatter = this.listFormatter || '(id) value';\n    if (typeof formatter === 'function') {\n      formatted = formatter.apply(this, [data]);\n    } else if (typeof data !== 'object') {\n      formatted = data;\n    } else if (typeof formatter === 'string') {\n      formatted = formatter;\n      let matches = formatter.match(/[a-zA-Z0-9_\\$]+/g);\n      if (matches && typeof data !== 'string') {\n        matches.forEach(key => {\n          formatted = formatted.replace(key, data[key]);\n        });\n      }\n    }\n    return formatted;\n  }\n\n  /**\n   * return remote data from the given source and options, and data path\n   */\n  getRemoteData(keyword: string): Observable<Response> {\n    if (typeof this.source !== 'string') {\n      throw \"Invalid type of source, must be a string. e.g. http://www.google.com?q=:my_keyword\";\n    } else if (!this.http) {\n      throw \"Http is required.\";\n    }\n   \n    /*\n    let matches = this.source.match(/:[a-zA-Z_]+/);\n    if (matches === null) {\n      throw \"Replacement word is missing.\";\n    }\n\n    let replacementWord = matches[0];\n    let url = this.source.replace(replacementWord, keyword);\n    return this.http.get(url)\n      .map(resp => resp.json())\n      .map(resp => {\n        let list = resp.data || resp;\n        console.log(resp);\n        if (this.pathToData) {\n          let paths = this.pathToData.split(\".\");\n          paths.forEach(prop => list = list[prop]);\n        }\n\n        return list;\n      });\n      \n     */\n    \n    let url = this.source;\n    let currentrequestdigest=(<HTMLInputElement>document.getElementById('__REQUESTDIGEST')).value;\n    let headers = new Headers({ \"accept\": \"application/json;odata=verbose\",\n            \"X-RequestDigest\": currentrequestdigest,\n            \"content-Type\": \"application/json;odata=verbose\",\n            });\n     let data = JSON.stringify({\n            'queryParams':{\n                '__metadata':{\n                    'type':'SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters'\n                },\n                'AllowEmailAddresses':true,\n                'AllowMultipleEntities':false,\n                'AllUrlZones':false,\n                'MaximumEntitySuggestions':50,\n                'PrincipalSource':15,\n                'PrincipalType': 15,\n                'QueryString':keyword\n                //'Required':false,\n                //'SharePointGroupID':null,\n                //'UrlZone':null,\n                //'UrlZoneSpecified':false,\n                //'Web':null,\n                //'WebApplicationID':null\n            }\n        });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(url, data, options)\n      .map(resp => resp.json())\n      .map(resp => {\n        let list = JSON.parse(resp.d.ClientPeoplePickerSearchUser) || resp;\n        console.log(resp);\n        /*  \n        console.log(this.pathToData);\n        if(this.pathToData) {\n          let paths = this.pathToData.split(\".\");\n           console.log(paths);\n          paths.forEach(prop => list = list[prop]);\n        }\n       */\n        console.log(list);\n        return list;\n      });\n\n      /* end */\n  }\n  \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/autocomplete/auto-complete.ts","import {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class MemoryStorage {\n  data: any = {};\n  get length(): number                   { return Object.keys(this.data).length; }\n  getItem(key: string)                   { return this.data[key]; }\n  setItem(key: string, value: any): void { this.data[key] = value; }\n  removeItem(key: string): void          { delete this.data[key]; }\n  clear(): void                          { this.data = {} }\n  key(num: number): string               { return Object.keys(this.data)[num]; }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Shared/utils/services/memory-storage.ts","import { Component, OnInit, OnChanges, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductService } from '../../product.service';\nimport { Customer } from '../customer';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-customeredit',\n  templateUrl: './customeredit.component.html',\n  styleUrls: ['./customeredit.component.css']\n})\n\nexport class CustomereditComponent implements OnInit {\n  id: number;\n  private sub: any;\n  product: Customer[];\n  errorMessage: string;\n  heroForm: FormGroup;\n  \n  constructor(private route: ActivatedRoute,\n  private productService: ProductService,\n  private fb: FormBuilder,\n  ) {\n    this.createForm();\n   }\n  createForm() {\n  this.heroForm = this.fb.group({\n                          FirstName: [''],\n                          LastName: [''],\n                          Email: [''],\n                          UserNameId: ['',Validators.nullValidator],\n                          UserName01Id: ['',Validators.nullValidator],\n                          UserName02Id: ['',Validators.nullValidator]\n                        });\n  }\n  \n  onSubmit(event: Event) {\n    event.preventDefault();\n    const formModel = this.heroForm.value;\n    console.log(formModel);\n    var json_string = JSON.stringify(formModel);\n    var json_obj = JSON.parse(json_string);\n    json_obj['__metadata'] = { \"type\": \"SP.Data.HelloListListItem\" };\n    json_string = JSON.stringify( json_obj );\n    console.log( json_string );\n    this.productService.updateCustomer(json_string,this.id)\n        .subscribe(products =>  console.log(\"completed\"),\n                           error => console.log('testing error updateCustomers'));\n  }\n  ngOnInit() {\n     this.sub = this.route.params.subscribe(params => {\n       this.id = +params['id']; // (+) converts string 'id' to a number\n       console.log(\"customer list ngonit\")\n        this.productService.getCustomerbyId(this.id)\n                .then(product => \n                    {\n                      console.log(product);\n                      this.product = product;\n                      console.log(product.ID);\n                      console.log(product.FirstName);\n                      console.log(this.product);\n                      this.heroForm.patchValue({\n                        FirstName:product.FirstName,\n                        LastName: product.LastName,\n                        Email: product.Email,\n                        UserNameId: product.UserNameId,\n                        UserName01Id: product.UserName01Id,\n                        UserName02Id: product.UserName02Id\n                      });\n                    },\n                    error => this.errorMessage = <any>error);\n       // In a real app: dispatch action to load the details here.\n    });\n  }\n  \n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customeredit/customeredit.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { Customer } from './customer';\nimport { ProductService } from '../product.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-customerlist',\n  templateUrl: './customerlist.component.html',\n  styleUrls: ['./customerlist.component.css']\n})\nexport class CustomerlistComponent implements OnInit {\n    pageTitle: string = 'Product List';\n    imageWidth: number = 50;\n    imageMargin: number = 2;\n    showImage: boolean = false;\n    listFilter: string;\n    errorMessage: string;\n    products: Customer[];\n  constructor(\n  private productService: ProductService,\n  private router: Router) { }\n    ngOnInit(): void {\n      console.log(\"customer list ngonit\")\n        this.productService.getCustomers()\n                .subscribe(products => this.products = products,\n                           error => this.errorMessage = <any>error);\n    }\n    /*\n    onItemEditClick(id) {\n      console.log(\"selected : \"+id); \n       this.router.navigate(['/CustomereditComponent', id]);\n    }\n    */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customerlist.component.ts"],"sourceRoot":""}